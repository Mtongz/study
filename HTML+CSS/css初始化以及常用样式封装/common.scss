.container {
  width: 1280px;
  margin: 0 auto;
}

.item {
  margin: 10px;
}

.fontm {
  font-size: 12px;
  // -webkit-transform-origin-x: 0;
  // -webkit-transform: scale(0.9);
}

.fontl {
  font-size: 32px;
}

// element 下拉
.el-dropdown-link {
  cursor: pointer;
  color: #409eff;
  font-size: 12px;
  user-select: none;

  .el-icon-arrow-down {
    font-size: 12px;
  }
}

// flexBox
.df {
  display: flex;
}

.dfbc {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.dfac {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.dfcc {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.aic {
  align-items: center;
}

.aie {
  align-items: flex-end;
}

.jcc {
  justify-content: center;
}

.jcsb {
  justify-content: space-between;
}

.jcsa {
  justify-content: space-around;
}

.jce {
  justify-content: flex-end;
}

.fdc {
  flex-direction: column;
}

// 文字一行超出省略
.otw {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 文字两行超出省略
.otw2 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

// 封装常用边距
$listKey:t,
b,
l,
r;

$listVal:top,
bottom,
left,
right;
$mp-size: 8px;

@for $size from 0 to 4 {
  .p#{$size} {
    padding: $size * $mp-size;
  }

  @for $i from 1 to length($listKey)+1 {
    .p#{nth($listKey,$i)}#{$size} {
      padding-#{nth($listVal,$i)}: $size * $mp-size;
    }
  }

  .m#{$size} {
    margin: $size * $mp-size;
  }

  @for $i from 1 to length($listKey)+1 {
    .m#{nth($listKey,$i)}#{$size} {
      margin-#{nth($listVal,$i)}: $size * $mp-size;
    }
  }
}


.clearfix:after,
.clearfix:before {
  content: " ";
  display: table
}

.clearfix:after {
  height: 0;
  line-height: 0;
  visibility: hidden;
  clear: both
}

.clearfix {
  *zoom: 1
}